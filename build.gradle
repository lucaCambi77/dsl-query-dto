plugins {
    id 'java'
    id "org.springframework.boot" version "3.3.2"
    id "io.spring.dependency-management" version "1.1.6"
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation platform('io.github.openfeign.querydsl:querydsl-bom:latest.release')

    implementation 'io.github.openfeign.querydsl:querydsl-core'
    implementation 'io.github.openfeign.querydsl:querydsl-jpa'
    implementation 'io.github.openfeign.querydsl:querydsl-apt'

    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    implementation 'org.mapstruct:mapstruct:1.5.5.Final' // Updated version
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'

}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2)  // Use half of available processors

}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorPath = configurations.annotationProcessor
}
